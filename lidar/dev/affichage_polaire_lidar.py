import matplotlib.pyplot as plt
import numpy as np

#liste qui va contenir notre matrice de point

liste_lidar=[3042.5, -1, -1, -1, -1, -1, -1, 3563.75, 3180.0, 2974.0, -1, -1, -1, -1, -1, -1, -1, 
             3284.25, 3210.0, 2970.75, 2994.0, 3078.25, -1, 686.0, 671.25, 657.5, 646.0, 636.25, 
             629.0, 632.5, 626.75, 628.5, 623.5, 628.5, 629.25, 633.0, 633.5, 637.5, 661.5, 640.25, 
             650.75, 661.5, 676.25, 682.25, 1020.0, 1024.25, 1025.0, 991.5, 973.5, 974.0, 982.75, 744.0, 
             735.75, 723.5, 741.0, 727.5, 726.0, 730.5, 740.0, 754.0, -1, -1, 235.5, 238.0, 238.75, 238.75, 221.5, 
             210.5, 212.5, 202.5, 202.0, 200.25, 200.75, 198.75, 195.0, 193.75, 194.5, 197.75, 189.5, 191.5, 193.5, 
             -1, -1, -1, -1, -1, 858.5, 854.25, 863.5, 870.0, 867.5, 863.0, 862.25, 870.75, 871.75, 877.25, 883.0, 526.75, 
             526.75, 524.75, 523.0, 522.5, 521.5, 521.75, 478.75, 353.5, 353.75, -1, -1, 1245.5, 424.25, 688.5, 1108.5, 
             -1, 755.5, 759.25, -1, 541.75, 536.25, 536.5, 534.0, -1, -1, 1386.25, 1508.25, 3112.25, 3068.25, 3020.5, 
             2958.0, 1468.75, 1388.5, 1349.75, 1342.75, 834.25, -1, 481.25, 481.0, 465.75, 457.25, 455.5, 456.0, -1, 555.75, 
             554.5, 553.75, 552.0, 552.0, 552.0, 550.75, 550.75, 551.25, 551.5, 1774.0, 803.0, 814.5, 801.5, 803.0, 803.5, 809.75, 
             816.75, 816.75, 823.75, 837.25, 1164.25, 854.0, 778.5, 664.25, 651.75, 643.25, 647.25, 633.0, 617.0, 620.75, 602.75, 
             591.75, 580.5, 586.75, 569.75, 569.75, 578.0, 551.5, 544.25, 542.5, 552.0, 543.5, 549.75, 560.0, 575.25, 582.5, 
             520.75, 506.0, 496.5, 495.5, 508.5, 499.25, 506.75, 519.5, 580.25, 356.0, 358.0, 518.75, 532.75, 366.25, 227.5,
            284.25, 443.5, 453.0, 291.25, 467.75, 224.25, 224.25, 330.0, 333.0, 397.0, 337.0, 342.0, 2476.5, 2476.0, 2415.0,
            2408.5, 3068.25, 2904.25, 2822.75, 2832.5, 2860.0, 2901.75, 3329.75, 3366.25, 3478.75, 3581.75, 3642.0, 3713.25, 
            3863.0, 4109.0, 4054.0, 4086.75, 4264.25, 4522.75, 4680.5, 4888.0, 13210.5, 13282.25, 13216.75, 13165.5, 13020.5, 
            13120.25, 12926.0, 12903.0, 12825.25, 4542.75, 4545.75, 4550.75, 4522.25, 4515.0, 4486.25, 4484.5, 4464.0, 4450.25, 
            4462.25, 4441.75, 4421.25, 4454.25, 4418.0, 4423.75, 4298.75, 4226.75, 4161.0, 4157.0, 4174.25, 4159.0, 4167.5, 4205.0, 
            4232.0, 4220.5, 4430.0, 4476.75, 4507.25, 4579.25, 4607.25, 4627.25, 4631.25, 4688.75, 4709.75, 4722.75, 4763.0, 4819.0, 
            2242.25, 2148.75, 2126.75, 2116.0, 2115.25, 2084.75, 2099.75, 2098.75, 2101.75, 2279.25, 2310.75, 2291.5, 2279.25, 4674.25, 
            4495.75, 3650.75, 3598.25, 3531.25, 3495.25, 2029.0, 1952.25, 1927.75, 1942.0, 1942.75, 1944.25, 1958.0, 1991.5, 2033.25, 
            349.75, 3511.5, 3563.25, 3634.5, 3743.5, 3827.25, 3882.0, 7989.25, 8263.0, 2372.25, 2387.5, 2414.0, 2441.0, 2455.25, 2489.75, 
            2525.25, 2557.25, 2575.0, 2620.0, 2646.5, 2667.5, 2706.5, 2743.5, 2805.75, 10638.75, 10720.75, 9553.75, 9210.0, 9194.75, 10296.5, 
            13028.5, 11648.25, 3057.0, 3009.25, 3006.75, 3005.5, 2949.0, 2906.5, 3242.75, 5154.5, 5213.0, 5258.5, 2787.5, 2802.75, 2809.0, 2987.25]

print(len(liste_lidar))

distance_lidar=[]

for val in liste_lidar:
    distance_lidar.append(val)
    #on ajoute le point à la matrice si !=-1
    #if val!=-1:
        #distance_lidar.append(val)
    #else:
        #distance_lidar.append(4000)

print(distance_lidar)

#........................................................................................................................................................
#Affichage des données

# Créer une liste d'angles en degrés
angles_lidar=[]
for i in range(360):
    angles_lidar.append(i)

print("taille angle", len(angles_lidar), "taille matrice", len(distance_lidar))
print("nouvelle matrice ",distance_lidar)

# Convertir les angles en radians
#angles_rad = np.deg2rad(angles_lidar)

# Créer une liste de distances
# distances_int = np.random.sample(len(angles))
# distances = distances_int*5000

# Créer un graphique en coordonnées polaires
fig, ax = plt.subplots(subplot_kw=dict(projection='polar'))

#on filtre les points

# Afficher le graphique
ax.scatter(angles_lidar, distance_lidar, c=distance_lidar, cmap='viridis')

#intervalle etendu
#ax.set_rticks([0,1000,5000,10000, 15000])  # Less radial ticks

#intervalle précis
ax.set_rticks([0,1000,5000,10000, 15000])

ax.set_rlabel_position(-22.5)  # Get radial labels away from plotted point
ax.grid(True)

# Afficher les angles en degrés
ax.set_xticklabels([0,45,90,135,180,225,270,325,360])
ax.set_theta_zero_location("N")  # Theta zero location (North)
ax.set_theta_direction(-1)  # Theta increasing direction (clockwise)

plt.show()